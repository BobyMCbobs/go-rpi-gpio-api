apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gpio-api
  namespace: gpio-api
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: gpio-api
  template:
    metadata:
      labels:
        app: gpio-api
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/os
                    operator: In
                    values:
                      - linux
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - arm64
      automountServiceAccountToken: false
      tolerations:
      - operator: Exists
        effect: NoSchedule
      containers:
      - name: gpio-api
        image: registry.gitlab.com/bobymcbobs/go-rpi-gpio-api:1.0.0
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 1000
          runAsGroup: 997
          privileged: true
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8080
        env:
          - name: TZ
            value: "Pacific/Auckland"
            #          - name: APP_AUTH_SECRET
            #            value: "123"
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 20
      initContainers:
        - name: fix-gpiomem-permissions
          image: alpine:3.12
          securityContext:
            privileged: true
          env:
            - name: GPIO_GROUP
              value: "997"
          command:
            - /bin/sh
            - -x
            - -c
            - "chown root.$GPIO_GROUP /host/dev/gpiomem && chmod 0660 /host/dev/gpiomem; ls -alh /host/dev/gpiomem"
          volumeMounts:
          - name: host-root
            mountPath: /host
      volumes:
        - name: host-root
          hostPath:
            path: /
